pipeline {
	agent {
		kubernetes {
			inheritFrom 'default'
			defaultContainer 'buildpack'
		}
	}

	parameters {
		string(name: 'GITHUB_URL', defaultValue: params.GITHUB_URL ?: '', description: 'GitHub URL', trim: true)
		string(name: 'BRANCH', defaultValue: params.GITHUB_URL ?: '', description: 'GitHub branch', trim: true)
		string(name: 'RESOURCE_TYPE', defaultValue: params.RESOURCE_TYPE ?: '', description: 'Type of resource (i.e. pv, ingress)', trim: true)
		string(name: 'RESOURCE_NAME', defaultValue: params.RESOURCE_NAME ?: '', description: 'Name of resource', trim: true)
		string(name: 'NAMESPACE', defaultValue: params.NAMESPACE ?: '', description: 'Namespace of resource', trim: true)
	}

	stages {
		stage('Git Clone') {
			steps {
				script {
					withCredentials([file(credentialsId: 'kube-config', variable: 'KUBE_CONFIG')]) {
						checkout scmGit(
							branches: [[
								name: "$BRANCH"
							]],
							userRemoteConfigs: [[
								credentialsId: 'github',
								url: "$GITHUB_URL"
							]]
						)

						sh 'mkdir -p $WORKSPACE/.kube && cp $KUBE_CONFIG $WORKSPACE/.kube/config'
						sh 'ls -lah'

						echo "GITHUB_URL: $GITHUB_URL"
						echo "BRANCH: $BRANCH"
						echo "RESOURCE_TYPE: $RESOURCE_TYPE"
						echo "RESOURCE_NAME: $RESOURCE_NAME"
						echo "NAMESPACE: $NAMESPACE"
					}
				}
			}
		}

		stage('Delete Resource') {
			steps {
				script {
					sh "kubectl delete $RESOURCE_TYPE $RESOURCE_NAME -n $NAMESPACE"
				}
			}
		}
	}
}